{"version":3,"sources":["App.tsx","api.ts","components/Loader/Loader.tsx","components/PeoplePage.tsx","Root.tsx","index.tsx"],"names":["App","linkClass","isActive","classNames","className","role","to","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","People","useState","people","setPeople","personSlug","useParams","isLoading","setIsLoading","isLoadingError","setIsLoadingError","isSelected","setIsSelected","useEffect","catch","finally","isAnchorHere","anchorName","find","person","name","length","map","slug","sex","onClick","born","died","motherName","fatherName","Root","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.c57a55c1.chunk.js","sourcesContent":["import { Outlet, NavLink } from 'react-router-dom';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const App = () => {\n  const linkClass = (\n    { isActive }: { isActive: boolean },\n  ) => classNames('navbar-item', { 'has-background-grey-lighter': isActive });\n\n  return (\n    <div data-cy=\"app\">\n      <nav\n        data-cy=\"nav\"\n        className=\"navbar is-fixed-top has-shadow\"\n        role=\"navigation\"\n        aria-label=\"main navigation\"\n      >\n        <div className=\"container\">\n          <div className=\"navbar-brand\">\n            <NavLink className={linkClass} to=\"/\">\n              Home\n            </NavLink>\n\n            <NavLink\n              className={linkClass}\n              to=\"/people\"\n            >\n              People\n            </NavLink>\n          </div>\n        </div>\n      </nav>\n\n      <main className=\"section\">\n        <div className=\"container\">\n          <Outlet />\n        </div>\n      </main>\n    </div>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Link, useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport classNames from 'classnames';\nimport { getPeople } from '../api';\nimport { Person } from '../types/Person';\nimport { Loader } from './Loader';\n\nexport const People: React.FC = () => {\n  const [people, setPeople] = useState([] as Person[]);\n  const { personSlug } = useParams();\n  const [isLoading, setIsLoading] = useState(false);\n  const [isLoadingError, setIsLoadingError] = useState(false);\n  const [isSelected, setIsSelected] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    getPeople()\n      .then(response => setPeople(response))\n      .catch(() => setIsLoadingError(true))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  const isAnchorHere = (anchorName: string | null): Person | undefined => {\n    if (anchorName) {\n      return people.find(person => person.name === anchorName);\n    }\n\n    return undefined;\n  };\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"block\">\n          <div className=\"box table-container\">\n            {isLoadingError && (\n              <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n                Something went wrong\n              </p>\n            )}\n            {(people.length === 0 && !isLoadingError) && (\n              <p data-cy=\"noPeopleMessage\">\n                There are no people on the server\n              </p>\n            )}\n            <table\n              data-cy=\"peopleTable\"\n              className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n            >\n              {(people.length > 0) && (\n                <thead>\n                  <tr>\n                    <th>Name</th>\n                    <th>Sex</th>\n                    <th>Born</th>\n                    <th>Died</th>\n                    <th>Mother</th>\n                    <th>Father</th>\n                  </tr>\n                </thead>\n              )}\n              <tbody>\n                {people.map((person) => {\n                  return (\n                    <tr\n                      data-cy=\"person\"\n                      key={person.slug}\n                      className={classNames({\n                        'has-background-warning':\n                          isSelected && person.slug === personSlug,\n                      })}\n                    >\n                      <td>\n                        <Link\n                          to={`/people/${person.slug}`}\n                          className={classNames({\n                            'has-text-danger': person.sex === 'f',\n                          })}\n                          onClick={() => setIsSelected(true)}\n                        >\n                          {person.name}\n                        </Link>\n                      </td>\n\n                      <td>{person.sex}</td>\n                      <td>{person.born}</td>\n                      <td>{person.died}</td>\n\n                      <td>\n                        {isAnchorHere(person.motherName) ? (\n                          <Link\n                            to={`/people/${isAnchorHere(person.motherName)?.slug}`}\n                            className=\"has-text-danger\"\n                            onClick={() => setIsSelected(false)}\n                          >\n                            {isAnchorHere(person.motherName)?.name}\n                          </Link>\n                        ) : (\n                          <>\n                            {person.motherName}\n                          </>\n                        )}\n                      </td>\n                      <td>\n                        {isAnchorHere(person.fatherName) ? (\n                          <Link\n                            to={`/people/${isAnchorHere(person.fatherName)?.slug}`}\n                            className={classNames({\n                              'has-text-danger': person.sex === 'f',\n                            })}\n                          >\n                            {isAnchorHere(person.fatherName)?.name}\n                          </Link>\n                        ) : (\n                          <>\n                            {person.fatherName}\n                          </>\n                        )}\n                      </td>\n                    </tr>\n                  );\n                })}\n\n              </tbody>\n            </table>\n          </div>\n        </div>\n\n      )}\n    </>\n  );\n};\n","import {\n  HashRouter,\n  Route,\n  Routes,\n  Navigate,\n} from 'react-router-dom';\nimport { App } from './App';\nimport { People } from './components/PeoplePage';\n\nexport const Root = () => (\n  <HashRouter>\n    <Routes>\n      <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n      <Route path=\"/\" element={<App />}>\n        <Route index element={<h1 className=\"title\">Home Page</h1>} />\n        <Route path=\"people\">\n          <Route index element={<People />} />\n          <Route path=\":personSlug\" element={<People />} />\n        </Route>\n        <Route\n          path=\"*\"\n          element={<p className=\"title\">Page not found</p>}\n        />\n      </Route>\n    </Routes>\n  </HashRouter>\n);\n","import { createRoot } from 'react-dom/client';\nimport { Root } from './Root';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Root />,\n  );\n"],"sourceRoot":""}